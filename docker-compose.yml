services:
  postgres-db:
    image: postgres:15-alpine
    container_name: states_municipalities_db
    restart: always
    environment:
      POSTGRES_USER: admin_user
      POSTGRES_PASSWORD: admin_password
      POSTGRES_DB: states_municipalities_db
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  api-1:
    build:
      context: . 
      args:
        DATABASE_URL: "dummy://just-to-pass-build"
    container_name: api-1 
    restart: always # <--- CORRECCIÓN
    expose:
      - "3000"
    depends_on:
      - postgres-db
    environment:
      DATABASE_URL: "postgresql://admin_user:admin_password@postgres-db:5432/states_municipalities_db"

  api-2:
    build:
      context: .
      args:
        DATABASE_URL: "dummy://just-to-pass-build"
    container_name: api-2
    restart: always # <--- CORRECCIÓN
    expose:
      - "3000"
    depends_on:
      - postgres-db
    environment:
      DATABASE_URL: "postgresql://admin_user:admin_password@postgres-db:5432/states_municipalities_db"

  api-3:
    build:
      context: .
      args:
        DATABASE_URL: "dummy://just-to-pass-build"
    container_name: api-3
    restart: always # <--- CORRECCIÓN
    expose:
      - "3000"
    depends_on:
      - postgres-db
    environment:
      DATABASE_URL: "postgresql://admin_user:admin_password@postgres-db:5432/states_municipalities_db"

  nginx:
    image: nginx:alpine
    container_name: reverse-proxy
    ports:
      - "80:80"
    volumes:
    # Sobrescribe el archivo de configuración por defecto de Nginx
    # con nuestro archivo app.conf
    - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api-1
      - api-2
      - api-3

volumes:
  postgres-data:

